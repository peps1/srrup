name: build

on:
  push:
    paths:
      - "src/**"
      - "*.json"
      - ".github/**"
  workflow_dispatch:

jobs:
  build-deno:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compile-targets: [
          { "target": "x86_64-unknown-linux-gnu", "platform": "linux-x86_64" },
          { "target": "aarch64-unknown-linux-gnu", "platform": "linux-aarch64" },
          { "target": "x86_64-pc-windows-msvc", "platform": "windows-x86_64" },
          { "target": "x86_64-apple-darwin", "platform": "macos-x86_64" },
          { "target": "aarch64-apple-darwin", "platform": "macos-aarch64" },
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build executable ${{ matrix.compile-targets }}
        uses: denolib/setup-deno@v2
        with:
          deno-version: v2.x
      - run: deno install
      - run: deno test --allow-env --allow-read --allow-sys --coverage --trace-leaks src/
      - run: deno coverage --lcov ./coverage > coverage.lcov
      - run: deno compile --allow-env --allow-read --allow-write --allow-sys --allow-net --target ${{ matrix.compile-targets.target }} -o bin/srrup-${{ matrix.compile-targets.platform }} src/index.ts
      - uses: actions/upload-artifact@v4
        with:
          name: srrup-${{ matrix.compile-targets.platform }}
          path: bin/srrup*
          retention-days: 7
      - uses: codecov/codecov-action@v4
        with:
          files: coverage.lcov
          flags: unittests
          name: codecov-umbrella
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release-github:
    needs: build-deno
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: bin
      - name: Display structure of downloaded files
        run: ls -alhR bin
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: bin/**
